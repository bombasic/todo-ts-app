{"ast":null,"code":"var _jsxFileName = \"/Users/alenbasic/dev/ts-todo-practice/src/components/todoListItem.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoListItem = _ref => {\n  let {\n    todo,\n    toggleTodo\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        textDecoration: todo.complete ? \"line-through\" : undefined\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: todo.complete,\n        onChange: () => toggleTodo(todo)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), todo.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TodoListItem;\nexport default TodoListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoListItem\");","map":{"version":3,"sources":["/Users/alenbasic/dev/ts-todo-practice/src/components/todoListItem.tsx"],"names":["TodoListItem","todo","toggleTodo","textDecoration","complete","undefined","text"],"mappings":";;;AAKA,MAAMA,YAA6B,GAAG,QAA0B;AAAA,MAAzB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAyB;AAC9D,sBACE;AAAA,2BACE;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,cAAc,EAAEF,IAAI,CAACG,QAAL,GAAgB,cAAhB,GAAiCC;AAAnD,OADT;AAAA,8BAGE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,OAAO,EAAEJ,IAAI,CAACG,QAFhB;AAGE,QAAA,QAAQ,EAAE,MAAMF,UAAU,CAACD,IAAD;AAH5B;AAAA;AAAA;AAAA;AAAA,cAHF,EAQGA,IAAI,CAACK,IARR;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAfD;;KAAMN,Y;AAiBN,eAAeA,YAAf","sourcesContent":["interface Props {\n  todo: Todo;\n  toggleTodo: toggleTodo;\n}\n\nconst TodoListItem: React.FC<Props> = ({ todo, toggleTodo }) => {\n  return (\n    <li>\n      <label\n        style={{ textDecoration: todo.complete ? \"line-through\" : undefined }}\n      >\n        <input\n          type=\"checkbox\"\n          checked={todo.complete}\n          onChange={() => toggleTodo(todo)}\n        />\n        {todo.text}\n      </label>\n    </li>\n  );\n};\n\nexport default TodoListItem;\n"]},"metadata":{},"sourceType":"module"}