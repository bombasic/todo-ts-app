{"ast":null,"code":"var _jsxFileName = \"/Users/alenbasic/dev/ts-todo-practice/src/components/TodoList.tsx\";\nimport AddTodoForm from \"./AddTodoForm\";\nimport TodoListItem from \"./TodoListItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TodoList = _ref => {\n  let {\n    todos,\n    toggleTodo\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => {\n        return /*#__PURE__*/_jsxDEV(TodoListItem, {\n          todo: todo,\n          toggleTodo: toggleTodo\n        }, todo.text, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTodoForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/alenbasic/dev/ts-todo-practice/src/components/TodoList.tsx"],"names":["AddTodoForm","TodoListItem","TodoList","todos","toggleTodo","map","todo","text"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;;AAOA,MAAMC,QAAiC,GAAG,QAA2B;AAAA,MAA1B;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAA0B;AACnE,sBACE;AAAA,4BACE;AAAA,gBACGD,KAAK,CAACE,GAAN,CAAWC,IAAD,IAAU;AACnB,4BACE,QAAC,YAAD;AAA8B,UAAA,IAAI,EAAEA,IAApC;AAA0C,UAAA,UAAU,EAAEF;AAAtD,WAAmBE,IAAI,CAACC,IAAxB;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD,OAJA;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAYD,CAbD;;KAAML,Q;AAeN,eAAeA,QAAf","sourcesContent":["import AddTodoForm from \"./AddTodoForm\";\nimport TodoListItem from \"./TodoListItem\";\n\ninterface TodoListProps {\n  todos: Todo[];\n  toggleTodo: ToggleTodo;\n}\n\nconst TodoList: React.FC<TodoListProps> = ({ todos, toggleTodo }) => {\n  return (\n    <>\n      <ul>\n        {todos.map((todo) => {\n          return (\n            <TodoListItem key={todo.text} todo={todo} toggleTodo={toggleTodo} />\n          );\n        })}\n      </ul>\n      <AddTodoForm />\n    </>\n  );\n};\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}