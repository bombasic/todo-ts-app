{"ast":null,"code":"var _jsxFileName = \"/Users/alenbasic/dev/react/udemy/todo-ts-app/src/components/NewTodo.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTodo = props => {\n  _s();\n\n  const todoTextInputRef = useRef(null);\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredText = todoTextInputRef.current.value;\n\n    if (enteredText.trim().length === 0) {\n      // Throw Error\n      return;\n    }\n\n    props.onAddTodo(enteredText);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"text\",\n      children: \"ToDo Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"text\",\n      ref: todoTextInputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add ToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTodo, \"1sC+Y33RgTD/2YiEPp+XilOCiTo=\");\n\n_c = NewTodo;\nexport default NewTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTodo\");","map":{"version":3,"sources":["/Users/alenbasic/dev/react/udemy/todo-ts-app/src/components/NewTodo.tsx"],"names":["useRef","NewTodo","props","todoTextInputRef","submitHandler","event","preventDefault","enteredText","current","value","trim","length","onAddTodo"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;;;AAEA,MAAMC,OAAwD,GAAIC,KAAD,IAAW;AAAA;;AAC1E,QAAMC,gBAAgB,GAAGH,MAAM,CAAmB,IAAnB,CAA/B;;AAEA,QAAMI,aAAa,GAAIC,KAAD,IAA4B;AAChDA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,WAAW,GAAGJ,gBAAgB,CAACK,OAAjB,CAA0BC,KAA9C;;AAEA,QAAIF,WAAW,CAACG,IAAZ,GAAmBC,MAAnB,KAA8B,CAAlC,EAAqC;AACnC;AACA;AACD;;AAEDT,IAAAA,KAAK,CAACU,SAAN,CAAgBL,WAAhB;AACD,GAXD;;AAaA,sBACE;AAAM,IAAA,QAAQ,EAAEH,aAAhB;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,MAAtB;AAA6B,MAAA,GAAG,EAAED;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAvBD;;GAAMF,O;;KAAAA,O;AAyBN,eAAeA,OAAf","sourcesContent":["import { useRef } from \"react\";\n\nconst NewTodo: React.FC<{ onAddTodo: (text: string) => void }> = (props) => {\n  const todoTextInputRef = useRef<HTMLInputElement>(null);\n\n  const submitHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const enteredText = todoTextInputRef.current!.value;\n\n    if (enteredText.trim().length === 0) {\n      // Throw Error\n      return;\n    }\n\n    props.onAddTodo(enteredText);\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <label htmlFor=\"text\">ToDo Text</label>\n      <input type=\"text\" id=\"text\" ref={todoTextInputRef} />\n      <button>Add ToDo</button>\n    </form>\n  );\n};\n\nexport default NewTodo;\n"]},"metadata":{},"sourceType":"module"}