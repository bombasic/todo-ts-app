[{"/Users/alenbasic/dev/react/udemy/todo-ts-app/src/index.tsx":"1","/Users/alenbasic/dev/react/udemy/todo-ts-app/src/App.tsx":"2","/Users/alenbasic/dev/react/udemy/todo-ts-app/src/components/Todos.tsx":"3","/Users/alenbasic/dev/react/udemy/todo-ts-app/src/models/todo.ts":"4","/Users/alenbasic/dev/react/udemy/todo-ts-app/src/components/TodoItem.tsx":"5","/Users/alenbasic/dev/react/udemy/todo-ts-app/src/components/NewTodo.tsx":"6"},{"size":168,"mtime":1648844506314,"results":"7","hashOfConfig":"8"},{"size":530,"mtime":1648847858569,"results":"9","hashOfConfig":"8"},{"size":326,"mtime":1648844498770,"results":"10","hashOfConfig":"8"},{"size":172,"mtime":1648844502707,"results":"11","hashOfConfig":"8"},{"size":119,"mtime":1648844492117,"results":"12","hashOfConfig":"8"},{"size":675,"mtime":1648846606041,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18m1mg8",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/Users/alenbasic/dev/react/udemy/todo-ts-app/src/index.tsx",[],"/Users/alenbasic/dev/react/udemy/todo-ts-app/src/App.tsx",[],"/Users/alenbasic/dev/react/udemy/todo-ts-app/src/components/Todos.tsx",["28"],"import TodoItem from \"./TodoItem\";\nimport Todo from \"../models/todo\";\nimport { isTypeNode } from \"typescript\";\n\nconst Todos: React.FC<{ items: Todo[] }> = (props) => {\n  return (\n    <ul>\n      {props.items.map((item) => (\n        <TodoItem key={item.id} text={item.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default Todos;\n",["29","30"],"/Users/alenbasic/dev/react/udemy/todo-ts-app/src/models/todo.ts",[],"/Users/alenbasic/dev/react/udemy/todo-ts-app/src/components/TodoItem.tsx",[],"/Users/alenbasic/dev/react/udemy/todo-ts-app/src/components/NewTodo.tsx",[],{"ruleId":"31","severity":1,"message":"32","line":3,"column":10,"nodeType":"33","messageId":"34","endLine":3,"endColumn":20},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},"@typescript-eslint/no-unused-vars","'isTypeNode' is defined but never used.","Identifier","unusedVar","no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-global-assign","no-unsafe-negation"]